/* Console panel with Byte (robot) column */
.log-panel {
    position: fixed;
    left: 1rem;
    bottom: 1rem;
    z-index: 11000;
    pointer-events: auto;
    width: min(92vw, 520px);
    max-height: 100vh;
    overflow: hidden;
    backdrop-filter: blur(8px);
    background: rgba(2, 6, 23, 0.72);
    border: 1px solid rgba(255, 255, 255, .14);
    border-radius: 0.75rem;
    box-shadow: 0 18px 48px rgba(2, 6, 23, .36);
    padding: .6rem .6rem .5rem;
    color: #f1f5f9;
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-size: 12px;
    line-height: 1.2;
    display: grid;
    grid-template-columns: 76px 1fr;
    gap: .5rem;
    align-items: stretch;
    transition: width 0.6s cubic-bezier(0.4, 0, 0.2, 1), height 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.log-panel.show {
    animation: slideUpIn .25s ease forwards;
}

.log-panel.minimized {
    width: 100px !important;
    height: 100px !important;
    max-height: none !important;
}

/* Log body */
.log-body {
    display: flex;
    flex-direction: column;
    min-width: 0;
    width: 100%;
    border-left: 1px solid rgba(255, 255, 255, .08);
}

.log-lines {
    overflow: auto;
    padding-right: .25rem;
    padding-left: 10px;
}

.log-line {
    opacity: 0;
    display: flex;
    align-items: center;
    gap: .4rem;
    padding: .35rem .45rem;
    border-radius: .5rem;
    background: rgba(255, 255, 255, 0.04);
    margin: .25rem 0;
}

.log-line.show {
    animation: fadeIn .18s ease forwards;
}

.log-line.fade {
    animation: fadeOut .5s ease forwards;
}

.log-dot {
    width: .4rem;
    height: .4rem;
    border-radius: 9999px;
    background: #22d3ee;
    flex: none;
    opacity: .9;
}

.log-ok {
    color: #86efac;
}

.log-warn {
    color: #fde68a;
}

.log-muted {
    color: #cbd5e1;
    opacity: .9;
}

.log-prompt {
    margin-top: auto;
    display: flex;
    align-items: center;
    gap: .5rem;
    padding: .35rem .35rem .45rem;
    opacity: 1;
    border-top: none;
}

.log-input {
    flex: 1;
    background: transparent;
    border: none;
    outline: none;
    color: #ffffff;
    font: inherit;
    padding: 6px 6px;
    caret-color: #ffffff;
    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.35);
}

.log-input::placeholder {
    color: #e5e7eb;
    opacity: .9;
    text-shadow: none;
}

.log-hint {
    padding: .25rem .75rem .5rem;
    color: #e5e7eb;
    opacity: .98;
    font-size: 11.5px;
    border-top: 1px dashed rgba(255, 255, 255, .12);
}

/* Console inline color helpers */
.c-cmd { color: #c4b5fd; }
.c-key { color: #bfdbfe; }
.c-str { color: #bbf7d0; }
.c-num { color: #fecaca; }
.c-bool { color: #fde68a; }
.c-null { color: #fecdd3; }
.c-path { color: #a5f3fc; }
.c-verb { color: #93c5fd; }
.c-sec { color: #f9a8d4; }
.c-note { color: #e2e8f0; }

/* Byte the Robot (original design) */
.byte-wrap {
    position: relative;
    display: grid;
    grid-template-rows: 1fr auto;
    place-items: center;
    padding: .25rem .25rem .2rem;
}

.byte {
    width: 60px;
    height: 60px;
    border-radius: 12px;
    display: grid;
    place-items: center;
    background: radial-gradient(120% 120% at 20% 15%, rgba(99, 102, 241, .28), rgba(14, 165, 233, .22) 60%, rgba(6, 182, 212, .16));
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, .08), 0 8px 20px rgba(2, 6, 23, .25);
    transition: transform .45s cubic-bezier(.22, .61, .36, 1), filter .45s cubic-bezier(.22, .61, .36, 1), box-shadow .45s cubic-bezier(.22, .61, .36, 1);
    cursor: pointer;
}

.byte:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, .2), 0 12px 28px rgba(99, 102, 241, .35);
}

.byte:active {
    transform: translateY(0) scale(0.98);
}

.byte:focus-visible {
    outline: 2px solid rgba(99, 102, 241, .6);
    outline-offset: 2px;
}

.byte.active {
    filter: saturate(1.08);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, .16), 0 12px 26px rgba(99, 102, 241, .28);
}

.byte svg {
    width: 50px;
    height: 50px;
    overflow: visible;
}

/* Byte states */
@keyframes eyeBlink {
    0%,
    96%,
    100% {transform: scaleY(1)}
    97%,
    99% {transform: scaleY(0.08)}
}

@keyframes bodyBreathe {
    0%,
    100% {transform: translateY(0)}
    50% {transform: translateY(1.2px)}
}

@keyframes lookAround {
    0%,
    100% {transform: translate(0, 0)}
    50% {transform: translate(1.2px, -1.2px)}
}

@keyframes treadRoll {
    0% {transform: translateX(0)}
    100% {transform: translateX(-5px)}
}

@keyframes happyPulse {
    0% {transform: scale(1);opacity: .0}
    50% {opacity: .5}
    100% {transform: scale(1.6);opacity: 0}
}

@keyframes shake {
    0%,
    25% {transform: translateX(-1.4px)}
    50% {transform: translateX(1.4px)}
    75% {transform: translateX(-0.8px)}
    100% {transform: translateX(0)}
}

@keyframes waveArm {
    0% {transform: rotate(0deg)}
    25% {transform: rotate(-15deg)}
    50% {transform: rotate(10deg)}
    75% {transform: rotate(-5deg)}
    100% {transform: rotate(0deg)}
}

@keyframes sparkleBurst {
    0% {transform: scale(.6);opacity: 0}
    40% {opacity: .9}
    100% {transform: scale(1.4); opacity: 0}
}

.byte-idle .byte-body { animation: bodyBreathe 4.2s ease-in-out infinite; }
.byte-idle .eye { animation: eyeBlink 2s infinite; }
.byte-typing .byte-body { animation: bodyBreathe 2.6s ease-in-out infinite, lookAround 1.2s ease-in-out infinite; }
.byte-fetch .tread { animation: treadRoll .6s linear infinite; }
.byte-ok .ok-ring { animation: happyPulse .9s ease-out 1; }
.byte-error .byte-body { animation: shake .5s ease-in-out 1; }
.byte-wave .arm-right { transform-origin: 37px 12px; animation: waveArm .9s ease-in-out 1; }
.byte-fun .sparkle { animation: sparkleBurst .8s ease-out 1; }

.byte-tip {
    margin-top: .25rem;
    font-size: 10px;
    color: #cbd5e1;
    opacity: .9;
    text-align: center;
    min-height: 12px;
    pointer-events: none;
}

/* Reduce motion */
@media (prefers-reduced-motion: reduce) {

    .byte-body,
    .eye,
    .tread,
    .ok-ring {
        animation: none !important;
    }
}

/* Keyframes for panel */
@keyframes slideUpIn { from { transform: translateY(16px); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
@keyframes fadeIn { from { opacity: 0 } to { opacity: 1 } }
@keyframes fadeOut { from { opacity: 1 } to { opacity: 0 } }
